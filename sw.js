"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["dist/0.751d059a263fc1a0e844.js","819f790167c7066f234016c7a6e632e5"],["dist/0.751d059a263fc1a0e844.js.gz","5d025a6f3ff38e52664115ff8adf827e"],["dist/1.751d059a263fc1a0e844.js","a2ef1e30bc5ab3cc9fbc1da12caa383d"],["dist/1.751d059a263fc1a0e844.js.gz","e73531f29d071a5679a7664f7e8a65c7"],["dist/2.751d059a263fc1a0e844.js","a54dc78363845877c5e441319cd7be73"],["dist/2.751d059a263fc1a0e844.js.gz","55d67c1037a96663e6ce00823ddf0423"],["dist/3.751d059a263fc1a0e844.js","407bbcce4ef4d12508cae5d3f3c066be"],["dist/3.751d059a263fc1a0e844.js.gz","4d7976f3bf6feb3a037e9e7d7401da4e"],["dist/4.751d059a263fc1a0e844.js","118cb3fe73478ae411ed4150b7e0976c"],["dist/5.751d059a263fc1a0e844.js","5bb6dd9889d6b33aff3d82e1c3d3d266"],["dist/6.751d059a263fc1a0e844.js","725b66520bd74f1e3c3fe876d6cbfe5c"],["dist/7.751d059a263fc1a0e844.js","b6a6f13587caf9058cbce4af7a844950"],["dist/7.751d059a263fc1a0e844.js.gz","dfc23019072eb110c4e09bca2d59e9b9"],["dist/8.751d059a263fc1a0e844.js","98f8ce23b32c8dc1ad23e17dcf4d6aca"],["dist/client.js.751d059a263fc1a0e844.js","748c9ab7f13015711964534b062b12ec"],["dist/client.js.751d059a263fc1a0e844.js.gz","8914cdd12dac39f6eb34f8045d203c0c"],["dist/favicon.ico","6559275cbd2d69edbf66b78ab32a86f4"],["dist/img/kilimanjaro-logo.png","c6755c5888dca1dab125f1d192e1480e"],["dist/img/loader.svg","3bc67ed4976aa6dfcb2e43692529a5d3"],["dist/main.js.751d059a263fc1a0e844.js","bf15e74406429af488acd29d6fc7a280"],["dist/main.js.751d059a263fc1a0e844.js.gz","96a57dc71c2fd75e6007f924e1195698"],["dist/manifest.json","8faf43b8dce843897fa9951328ffdcac"],["dist/vendor.751d059a263fc1a0e844.js","fec9d9f429d591b849cbc718bcdb0a5f"],["dist/vendor.751d059a263fc1a0e844.js.gz","7766a49efbfba2abdb74a6822f43f2ed"]],cacheName="sw-precache-v3-instachaw-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,!1);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});